plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

ext.buildnumber = 0

if (System.getenv('GITHUB_RUN_NUMBER')) {
    project.buildnumber = System.getenv('GITHUB_RUN_NUMBER')
    version = "${mod_version}+${buildnumber}-gha"
} else {
    version = "${mod_version}"
}

group = 'com.lovetropics.gamemodebuild'
base {
    archivesName = 'GamemodeBuild'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: parchment_version
    
    runs {
        configureEach {
            copyIdeResources = true
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'info'

            mods {
                gamemodebuild {
                    source sourceSets.main
                }
            }
        }

        client {
        	taskName 'gb_client'
        }

        server {
        	taskName 'gb_server'
        }

        data {
        	taskName 'gb_data'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'gamemodebuild', '--all', '--output', file('src/generated/resources/')
        }
    }
}

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'gamemodebuild.refmap.json'
    config 'gamemodebuild.mixins.json'
}

jarJar.enable()
dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.2.0-rc.5"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.2.0-rc.5")) {
        jarJar.ranged(it, "[0.2.0-rc.5,)")
    }
}

tasks.named('jar', Jar).configure {
    finalizedBy 'reobfJar'
    archiveClassifier.set('slim')

    manifest {
        attributes([
                "Specification-Title": "gamemodebuild",
                "Specification-Vendor": "lovetropics",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": archiveVersion,
                "Implementation-Vendor" :"lovetropics",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mod_version: mod_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
